<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLeft</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
friction = 3;

walkedLeft = false;
walkedRight = false;

PCcollide = false;
BedCollide = false;
canMove = true;

cameFromBed = false;
cameFromPC = false;

global.days = 0;

global.Fading = false;
global.ReadyTofadeIn = false;

// ACTIONS
prevAction = 0;
drawCodeText = false;
drawSleepText = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement
if(keyboard_check(vk_left) || keyboard_check(ord('A')) &amp;&amp; canMove = true)
{
    sprite_index = sprLeft;
    walkedLeft = true
    walkedRight = false;
    image_speed = 0.075;
    motion_set(180,5);
}
if(keyboard_check(vk_right) || keyboard_check(ord('D')) &amp;&amp; canMove = true)
{
    sprite_index = sprRight;
    walkedRight = true;
    walkedLeft = false;
    image_speed = 0.075;
    motion_set(0,5);
}
if(keyboard_check(vk_nokey))
{
    image_speed = 0;
    image_index = 1;
  
}

//Collisions


// EVENTS
// COMPUTER
if(place_free(x,y))
{
    PCcollide = false;
    BedCollide = false;
}

if(place_meeting(x,y,objComputerCollide))
{
    PCcollide = true;
}

//BED
if(place_free(x,y))
{
    BedCollide = false;
}

if(place_meeting(x,y,objBedCollide))
{
    BedCollide = true;
}


if(BedCollide = true &amp;&amp; canMove = true)
{
    if(keyboard_check(ord('E')))
    {
       global.Fading = true;
       global.ReadyTofadeIn = false;
       cameFromBed = true;
       cameFromPC = false;
    }
    
}

if(PCcollide = true &amp;&amp; canMove = true)
{
    if(keyboard_check(ord('E')))
    {
       global.Fading = true;
       global.ReadyTofadeIn = false;
       cameFromBed = false;
       cameFromPC = true;
       prevAction = 2;
    }
    
    if(cameFromPC)
    {
        
    }

}


// DEBUG

if(keyboard_check(ord('R')))
{
    room_restart();   
}

if(keyboard_check(ord('T')))
{
    global.Fading = true;
    global.ReadyTofadeIn = false; 
}

if(keyboard_check(ord('Y')))
{
    global.Fading = false;
    global.ReadyTofadeIn = true; 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBed">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objComputer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(0,0,string(global.days));

if(drawCodeText)
{
    draw_text(0,0,"Maybe I should code some more!");   
}
if(drawSleepText)
{
    draw_text(0,0,"Maybe I should get some sleep");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
